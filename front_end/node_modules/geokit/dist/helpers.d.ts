import { LatLngLiteral } from './definitions';
/**
 * Get Base 32 symbol from decimal chunk (5 bit binary value).
 * @param value Decimal value of chunk (5 bit binary value).
 * @returns Base 32 value.
 */
export declare function base32(value: number): string;
/**
 * Get decimal chunk (5 bit binary value) from Base 32 character.
 * @param value Base 32 character.
 * @returns Decimal value of chunk (5 bit binary value).
 */
export declare function decimalChunk(value: string): number;
/**
  * Determine if coordinate is greater than midle of range in a bit representation.
  * @param point Coordinates.
  * @param range Range of coordinates to check.
  * @returns Number representation if point is greater than the middle of the range.
  */
export declare function getBit(point: number, range: number[]): number;
/**
 * Get radians from degrees.
 * @param degrees Degrees.
 * @returns Radians.
 */
export declare function toRad(degrees: number): number;
/**
 * Validates user inputted coordinates.
 * @param coordinates User inputted coordinates.
 * @returns Error.
 */
export declare function validateCoordinates(coordinates: LatLngLiteral): Error;
